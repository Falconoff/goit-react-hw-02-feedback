{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["SectionTag","styled","section","SectionTitle","h2","Section","title","children","StatList","ul","StatListItem","li","StatListTotal","Statistics","good","neutral","bad","total","positivePercentage","BtnList","Button","button","props","feedbackRating","FeedbackOptions","options","onLeaveFeedback","map","item","type","onClick","Message","p","Notification","message","Container","div","App","state","handleIncrement","key","setState","prevState","Object","values","this","reduce","acc","value","summFeedbacks","countTotalFeedback","goodFeedbacksAmount","Math","round","totalFeedbacks","keys","percentage","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAAaC,IAAOC,QAAV,2EAKVC,EAAeF,IAAOG,GAAV,oD,OCJV,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAeG,IACdC,KCLA,IAAMC,EAAWP,IAAOQ,GAAV,0GAORC,EAAeT,IAAOU,GAAV,mDAIZC,EAAgBX,YAAOS,EAAPT,CAAH,iECEXY,I,MAAAA,EAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,eAACV,EAAD,WACE,eAACE,EAAD,oBAAqBI,KACrB,eAACJ,EAAD,uBAAwBK,KACxB,eAACL,EAAD,mBAAoBM,KACpB,eAACJ,EAAD,qBAAuBK,KACvB,eAACL,EAAD,iCAAmCM,EAAnC,WCROC,EAAUlB,IAAOQ,GAAV,gFAKPW,EAASnB,IAAOoB,OAAV,6MAQf,SAAAC,GACA,OAAQA,EAAMC,gBACZ,IAAK,OACH,MAAO,gFACT,IAAK,UACH,MAAO,gFACT,IAAK,MACH,MAAO,gFACT,QACE,MAAO,oFCrBA,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACP,EAAD,UACGM,EAAQE,KAAI,SAAAC,GAAI,OACf,6BACE,cAACR,EAAD,CACES,KAAK,SACLN,eAAgBK,EAChBE,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,KANIA,QCLV,I,EAAMG,EAAU9B,IAAO+B,EAAV,qFCCL,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAUG,ICFZ,IAAMC,EAAYlC,IAAOmC,IAAV,+GCOhBC,E,4MACJC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAaPuB,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAME,EAAUF,GAAO,O,wDAb9B,WACE,OAAOG,OAAOC,OAAOC,KAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,K,6CAGvE,WACE,IAAMC,EAAgBJ,KAAKK,qBACrBC,EAAsBN,KAAKP,MAAMxB,KACvC,OAAOsC,KAAKC,MAA6B,IAAtBF,EAA6BF,K,oBAWlD,WACE,IAAMK,EAAiBT,KAAKK,qBACtBzB,EAAUkB,OAAOY,KAAKV,KAAKP,OAC3BkB,EAAaX,KAAKY,kCACxB,EAA+BZ,KAAKP,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAACmB,EAAD,WACE,cAAC9B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACkB,EAAD,CAEEC,QAASA,EACTC,gBAAiBmB,KAAKN,oBAI1B,eAAClC,EAAD,CAASC,MAAM,aAAf,UACGgD,EAAiB,GAChB,cAAC,EAAD,CACExC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqC,EACPpC,mBAAoBsC,IAGJ,IAAnBF,GACC,cAACrB,EAAD,CAAcC,QAAQ,mC,GApDhBwB,aA4DHrB,I,YC/DfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.759bba45.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SectionTag = styled.section`\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTag, SectionTitle } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionTag>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionTag>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StatList = styled.ul`\n  width: 250px;\n  margin: 0 auto;\n  font-size: 20px;\n  text-align: start;\n`;\n\nexport const StatListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const StatListTotal = styled(StatListItem)`\n  color: #55f;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { StatList, StatListItem, StatListTotal } from './Statistics.styled';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <StatList>\n      <StatListItem>Good: {good}</StatListItem>\n      <StatListItem>Neutral: {neutral}</StatListItem>\n      <StatListItem>Bad: {bad}</StatListItem>\n      <StatListTotal>Total: {total}</StatListTotal>\n      <StatListTotal>Positive feedback: {positivePercentage}%</StatListTotal>\n    </StatList>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const BtnList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 50px;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #555;\n  cursor: pointer;\n  transition: background-color 300ms ease-out;\n  ${props => {\n    switch (props.feedbackRating) {\n      case 'good':\n        return 'background-color: #9f9; &:hover,&:focus {background-color: #6f6; color: #282}';\n      case 'neutral':\n        return 'background-color: #ffa; &:hover,&:focus {background-color: #ff0; color: #ba0}';\n      case 'bad':\n        return 'background-color: #f99; &:hover,&:focus {background-color: #f66; color: #f00}';\n      default:\n        return 'background-color: #ccc; &:hover,&:focus {background-color: #ddd; color: #333}';\n    }\n  }}\n`;\n","import PropTypes from 'prop-types';\nimport { BtnList, Button } from './FeedbackOptions.styled.jsx';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <BtnList>\n      {options.map(item => (\n        <li key={item}>\n          <Button\n            type=\"button\"\n            feedbackRating={item}\n            onClick={() => onLeaveFeedback(item)}\n          >\n            {item}\n          </Button>\n        </li>\n      ))}\n    </BtnList>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  color: #55f;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nexport default function Notification({ message }) {\n  return <Message>{message}</Message>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border: 3px solid #ddd;\n  padding 20px;\n  width: 400px;\n  margin: 20px auto;\n`;\n","import { Component } from 'react';\n\nimport Section from '../Section';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\n\nimport { Container } from './App.styled';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const summFeedbacks = this.countTotalFeedback();\n    const goodFeedbacksAmount = this.state.good;\n    return Math.round((goodFeedbacksAmount * 100) / summFeedbacks);\n  }\n\n  handleIncrement = key => {\n    this.setState(prevState => {\n      return {\n        [key]: prevState[key] + 1,\n      };\n    });\n  };\n\n  render() {\n    const totalFeedbacks = this.countTotalFeedback();\n    const options = Object.keys(this.state);\n    const percentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            // makes an array of keys from State\n            options={options}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedbacks > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbacks}\n              positivePercentage={percentage}\n            />\n          )}\n          {totalFeedbacks === 0 && (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}