{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["SectionTag","styled","section","SectionTitle","h2","Section","title","children","StatList","ul","StatListItem","li","StatListTotal","Statistics","good","neutral","bad","total","positivePercentage","BtnList","Button","button","props","feedbackRating","FeedbackOptions","options","onLeaveFeedback","map","item","type","onClick","Message","p","Notification","message","Container","div","App","state","handleIncrement","key","setState","prevState","this","summFeedbacks","countTotalFeedback","goodFeedbacksAmount","Math","round","totalFeedbacks","Object","keys","percentage","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAAaC,IAAOC,QAAV,2EAKVC,EAAeF,IAAOG,GAAV,oD,OCJV,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAeG,IACdC,KCLA,IAAMC,EAAWP,IAAOQ,GAAV,0GAORC,EAAeT,IAAOU,GAAV,mDAIZC,EAAgBX,YAAOS,EAAPT,CAAH,iECEXY,I,MAAAA,EAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,eAACV,EAAD,WACE,eAACE,EAAD,oBAAqBI,KACrB,eAACJ,EAAD,uBAAwBK,KACxB,eAACL,EAAD,mBAAoBM,KACpB,eAACJ,EAAD,qBAAuBK,KACvB,eAACL,EAAD,iCAAmCM,EAAnC,WCROC,EAAUlB,IAAOQ,GAAV,gFAkBPW,EAASnB,IAAOoB,OAAV,6MAbC,SAAAC,GAClB,OAAQA,EAAMC,gBACZ,IAAK,OACH,MAAO,gFACT,IAAK,UACH,MAAO,gFACT,IAAK,MACH,MAAO,gFACT,QACE,MAAO,oFCbE,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACP,EAAD,UACGM,EAAQE,KAAI,SAAAC,GAAI,OACf,6BACE,cAACR,EAAD,CACES,KAAK,SACLN,eAAgBK,EAChBE,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,KANIA,QCLV,I,EAAMG,EAAU9B,IAAO+B,EAAV,qFCCL,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAUG,ICFZ,IAAMC,EAAYlC,IAAOmC,IAAV,+GCOhBC,E,4MACJC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAgBPuB,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAME,EAAUF,GAAO,O,wDAhB9B,WACE,MAA+BG,KAAKL,MACpC,OADA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,M,6CAMzB,WACE,IAAM4B,EAAgBD,KAAKE,qBACrBC,EAAsBH,KAAKL,MAAMxB,KACvC,OAAOiC,KAAKC,MAA6B,IAAtBF,EAA6BF,K,oBAWlD,WACE,IAAMK,EAAiBN,KAAKE,qBACtBpB,EAAUyB,OAAOC,KAAKR,KAAKL,OAC3Bc,EAAaT,KAAKU,kCACxB,EAA+BV,KAAKL,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAACmB,EAAD,WACE,cAAC9B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACkB,EAAD,CAEEC,QAASA,EACTC,gBAAiBiB,KAAKJ,oBAI1B,eAAClC,EAAD,CAASC,MAAM,aAAf,UACG2C,EAAiB,GAChB,cAAC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,EACP/B,mBAAoBkC,IAGJ,IAAnBH,GACC,cAAChB,EAAD,CAAcC,QAAQ,mC,GAvDhBoB,aA+DHjB,I,YClEfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.837fc733.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SectionTag = styled.section`\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  margin-bottom: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { SectionTag, SectionTitle } from './Section.styled';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <SectionTag>\r\n      <SectionTitle>{title}</SectionTitle>\r\n      {children}\r\n    </SectionTag>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StatList = styled.ul`\r\n  width: 250px;\r\n  margin: 0 auto;\r\n  font-size: 20px;\r\n  text-align: start;\r\n`;\r\n\r\nexport const StatListItem = styled.li`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const StatListTotal = styled(StatListItem)`\r\n  color: #55f;\r\n  font-weight: 500;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StatList, StatListItem, StatListTotal } from './Statistics.styled';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <StatList>\r\n      <StatListItem>Good: {good}</StatListItem>\r\n      <StatListItem>Neutral: {neutral}</StatListItem>\r\n      <StatListItem>Bad: {bad}</StatListItem>\r\n      <StatListTotal>Total: {total}</StatListTotal>\r\n      <StatListTotal>Positive feedback: {positivePercentage}%</StatListTotal>\r\n    </StatList>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const BtnList = styled.ul`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst setBtnStyle = props => {\r\n  switch (props.feedbackRating) {\r\n    case 'good':\r\n      return 'background-color: #9f9; &:hover,&:focus {background-color: #6f6; color: #282}';\r\n    case 'neutral':\r\n      return 'background-color: #ffa; &:hover,&:focus {background-color: #ff0; color: #ba0}';\r\n    case 'bad':\r\n      return 'background-color: #f99; &:hover,&:focus {background-color: #f66; color: #f00}';\r\n    default:\r\n      return 'background-color: #ccc; &:hover,&:focus {background-color: #ddd; color: #333}';\r\n  }\r\n};\r\n\r\nexport const Button = styled.button`\r\n  width: 100px;\r\n  height: 50px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  color: #555;\r\n  cursor: pointer;\r\n  transition: background-color 300ms ease-out;\r\n  ${setBtnStyle}\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { BtnList, Button } from './FeedbackOptions.styled.jsx';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <BtnList>\r\n      {options.map(item => (\r\n        <li key={item}>\r\n          <Button\r\n            type=\"button\"\r\n            feedbackRating={item}\r\n            onClick={() => onLeaveFeedback(item)}\r\n          >\r\n            {item}\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </BtnList>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Message = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #55f;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Message } from './Notification.styled';\r\n\r\nexport default function Notification({ message }) {\r\n  return <Message>{message}</Message>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  border: 3px solid #ddd;\r\n  padding 20px;\r\n  width: 400px;\r\n  margin: 20px auto;\r\n`;\r\n","import { Component } from 'react';\n\nimport Section from '../Section';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\n\nimport { Container } from './App.styled';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n    // another way:\n    // return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const summFeedbacks = this.countTotalFeedback();\n    const goodFeedbacksAmount = this.state.good;\n    return Math.round((goodFeedbacksAmount * 100) / summFeedbacks);\n  }\n\n  handleIncrement = key => {\n    this.setState(prevState => {\n      return {\n        [key]: prevState[key] + 1,\n      };\n    });\n  };\n\n  render() {\n    const totalFeedbacks = this.countTotalFeedback();\n    const options = Object.keys(this.state);\n    const percentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            // makes an array of keys from State\n            options={options}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedbacks > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbacks}\n              positivePercentage={percentage}\n            />\n          )}\n          {totalFeedbacks === 0 && (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App.jsx';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}